name: Build TWRP Recovery

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
          - twrp-14
          - twrp-12.1
          - twrp-11
          - twrp-10.0-deprecated
          - twrp-9.0
          - twrp-8.1
          - twrp-8.1-macOS
          - twrp-7.1
          - twrp-6.0
          - twrp-5.1
          - twrp-4.4-deprecated
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: ''
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: ''
      DEVICE_PATH:
        description: 'Device Path'
        required: true
        default: ''
      DEVICE_NAME:
        description: 'Device Name'
        required: true
        default: ''
      MAKEFILE_NAME:
        description: 'Makefile Name (without .mk extension, e.g., omni_7304F)'
        required: true
        default: ''
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'vendorboot'
        type: choice
        options:
          - boot
          - recovery
          - vendorboot
      LDCHECK:
        description: 'Use LDCHECK'
        required: false
        default: 'false'
        type: boolean
      LDCHECKPATH:
        description: 'Path of blobs to check'
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      DEBIAN_FRONTEND: noninteractive
    permissions:
      contents: write

    steps:
    - name: Initial Setup
      run: |
        echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(TZ=UTC date +%Y%m%d)" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 24

    - name: Install Python 2.7 and Create Symlink
      run: |
        sudo apt update
        sudo apt install -y python2
        sudo ln -sf /usr/bin/python2 /usr/bin/python

    - name: Build TeamWin Recovery
      uses: mlm-games/teamwin-twrp-builder-action@main
      id: build
      with:
        MANIFEST_BRANCH: ${{ inputs.MANIFEST_BRANCH }}
        DEVICE_TREE: ${{ inputs.DEVICE_TREE }}
        DEVICE_TREE_BRANCH: ${{ inputs.DEVICE_TREE_BRANCH }}
        BUILD_TARGET: ${{ inputs.BUILD_TARGET }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: inputs.upload_releases == false || github.event_name != 'workflow_dispatch'
      with:
        name: TWRP-Recovery-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: |
          ${{ env.OUTPUT_DIR }}/*.img
          ${{ env.OUTPUT_DIR }}/*.tar
          ${{ env.OUTPUT_DIR }}/*vbmeta*
          ${{ env.OUTPUT_DIR }}/*.cpio

    - name: Upload to Release
      if: success()
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.OUTPUT_DIR }}/*.img
          ${{ env.OUTPUT_DIR }}/TWRP*.zip
        name: TWRP for ${{ inputs.DEVICE_NAME }} - ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          ## Build Information
          - **Build Date:** ${{ env.BUILD_DATE }}
          - **Branch:** ${{ inputs.MANIFEST_BRANCH }}
          - **Device:** ${{ inputs.DEVICE_NAME }}
          - **Build Type:** ${{ inputs.BUILD_TARGET }}

          ## Source Information
          - **Device Tree:** [${{ inputs.DEVICE_TREE }}](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
          - **Branch:** ${{ inputs.DEVICE_TREE_BRANCH }}

          ## Build Status
          - Recovery Image MD5: `${{ env.MD5_IMG }}`
          - ZIP Package MD5: `${{ env.MD5_ZIP }}`

          > Note: This is an automated build. Please test thoroughly before using.
        prerelease: false
        draft: false

    - name: Run LDCHECK
      uses: mlm-games/ldcheck-action@main
      with:
        OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
        LDCHECKPATH: ${{ inputs.LDCHECK_PATH }}
      continue-on-error: true

    - name: Calculate Build Time
      if: always()
      run: |
        BUILD_END=$(date +%s)
        BUILD_DURATION=$((BUILD_END - BUILD_START))

        hours=$((BUILD_DURATION / 3600))
        minutes=$(((BUILD_DURATION % 3600) / 60))
        seconds=$((BUILD_DURATION % 60))

        echo "Build completed in ${hours}h ${minutes}m ${seconds}s"

        # Save build statistics
        echo "BUILD_DURATION=${BUILD_DURATION}" >> $GITHUB_ENV
        echo "BUILD_HOURS=${hours}" >> $GITHUB_ENV
        echo "BUILD_MINUTES=${minutes}" >> $GITHUB_ENV
        echo "BUILD_SECONDS=${seconds}" >> $GITHUB_ENV

    - name: Cleanup Workspace
      if: always()
      run: |
        cd ${{ github.workspace }}
        rm -rf android-recovery
        df -h
