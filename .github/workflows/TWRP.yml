name: Recovery Build TWRP (Ubuntu-Latest)

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
        - twrp-14
        - twrp-12.1
        - twrp-11
        - twrp-10.0-deprecated
        - twrp-9.0
        - twrp-8.1
        - twrp-8.1-macOS
        - twrp-7.1
        - twrp-6.0
        - twrp-5.1
        - twrp-4.4-deprecated
      DEVICE_TREE:
        description: 'Custom Recovery Tree' # Your already made Device Tree for TWRP
        required: true
        default: 'https://github.com/r3nzph/twrp-device_tecno_TECNO-KJ5-v2001.git'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch' # Your Device Tree Branch, make sure it's right.
        required: true
        default: 'TWRP'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/tecno/KJ5'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'KJ5'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME (without including .mk, Example: omni_7304F)'
        required: true
        default: ''
      BUILD_TARGET:
        description: 'Specify your Build Target' # Pick among boot, recovery and vendor_boot
        required: true
        default: 'vendorboot'
        type: choice
        options:
        - boot
        - recovery
        - vendorboot
      LDCHECK:
        description: 'Use LDCHECK'
        required: false
        default: 'false'
        type: boolean
      LDCHECKPATH:
        description: 'Path of blobs to check' # Use it know what kind of dependencies your missing for decryption blobs.
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v4
      
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Check Manifest Branch
      run: |
        if [ ${{ inputs.MANIFEST_BRANCH }} == 'twrp-11' ] || [ ${{ inputs.MANIFEST_BRANCH }} == 'twrp-12.1' ] || [ ${{ inputs.MANIFEST_BRANCH }} == 'twrp-14' ]; then
            echo "MANIFEST=https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git" >> $GITHUB_ENV
            echo "CHECK_LEGACY_BRANCH=false" >> $GITHUB_ENV
        else
            echo "MANIFEST=https://github.com/mlm-games/platform_manifest_twrp_omni.git" >> $GITHUB_ENV
            echo "CHECK_LEGACY_BRANCH=true" >> $GITHUB_ENV
        fi

    - name: Install Python 2.7 and Create Symlink
      run: |
        sudo apt update
        sudo apt install -y python2
        sudo ln -sf /usr/bin/python2 /usr/bin/python

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install Git-Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize Repo
      run: |
        mkdir android-recovery
        cd android-recovery
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        repo init --depth=1 -u ${{ env.MANIFEST }} -b ${{ inputs.MANIFEST_BRANCH }}

    - name: Repo Sync
      run: |
        cd android-recovery
        repo sync -j$(nproc --all) --force-sync
      
    - name: Clone Device Tree
      run: |
        cd android-recovery
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} ./${{ inputs.DEVICE_PATH }}
        echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Installing python2 for legacy builds
      if: env.CHECK_LEGACY_BRANCH == 'true'
      run: |
        sudo apt-get install python2 python-is-python2

    - name: Building Image 
      run: |
        cd android-recovery
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ inputs.BUILD_TARGET }}image -j$(nproc --all)
        echo "Done building your ${{ inputs.BUILD_TARGET }}.img"

    - name: Set Build Date # Output will be use in Release
      run: |
        echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
      
    - name: Upload to Release
      if: success()
      uses: softprops/action-gh-release@master
      with:
        files: |
          android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/${{ inputs.BUILD_TARGET }}.img
          android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/*installer*zip
          android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/ramdisk-recovery.*
          android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/vbmeta.*
        name: Unofficial TWRP for ${{ inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Build: ${{ inputs.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
        prerelease: true

    - name: Run LDCheck
      if: inputs.LDCHECK == 'true'
      run: |
        cd tools
        mv -n libneeds ${GITHUB_WORKSPACE}/android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/recovery/root/
        mv -n ldcheck ${GITHUB_WORKSPACE}/android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/recovery/root/
        cd ../android-recovery/out/target/product/${{ inputs.DEVICE_NAME }}/recovery/root
        python3 ldcheck -p system/lib64:vendor/lib64:system/lib:vendor/lib -d ${{ inputs.LDCHECKPATH }}
        echo "Done checking missing dependencies. Review, and reconfigure your tree."
      continue-on-error: true
